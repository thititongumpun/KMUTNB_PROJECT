// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dded.db.Linkage;

namespace dded.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201013033734_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("dded.db.Linkage.AmloOfficer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("ActiveFlag")
                        .HasColumnType("bit");

                    b.Property<string>("CardId")
                        .HasColumnName("CardID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CitizenId")
                        .HasColumnName("CitizenID")
                        .HasColumnType("varchar(13)")
                        .HasMaxLength(13)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("GovOfficer")
                        .HasColumnType("bit");

                    b.Property<string>("Pin")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.HasKey("Id");

                    b.ToTable("amlo_officer");
                });

            modelBuilder.Entity("dded.db.Linkage.TblDepartment", b =>
                {
                    b.Property<Guid>("DepartmentId")
                        .HasColumnName("DEPARTMENT_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("ActiveFlag")
                        .HasColumnName("ACTIVE_FLAG")
                        .HasColumnType("bit");

                    b.Property<string>("DepartmentCode")
                        .HasColumnName("DEPARTMENT_CODE")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("DepartmentName")
                        .HasColumnName("DEPARTMENT_NAME")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("DepartmentId");

                    b.ToTable("TBL_DEPARTMENT");
                });

            modelBuilder.Entity("dded.db.Linkage.TblLevel", b =>
                {
                    b.Property<int>("LevelId")
                        .HasColumnName("LEVEL_ID")
                        .HasColumnType("int");

                    b.Property<bool?>("ActiveFlag")
                        .HasColumnName("ACTIVE_FLAG")
                        .HasColumnType("bit");

                    b.Property<string>("LevelName")
                        .HasColumnName("LEVEL_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LevelId");

                    b.ToTable("TBL_LEVEL");
                });

            modelBuilder.Entity("dded.db.Linkage.TblLog", b =>
                {
                    b.Property<Guid>("LogId")
                        .HasColumnName("LOG_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime");

                    b.Property<string>("Data")
                        .HasColumnName("DATA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MapmenuId")
                        .HasColumnName("MAPMENU_ID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LogId");

                    b.ToTable("TBL_LOG");
                });

            modelBuilder.Entity("dded.db.Linkage.TblMainmenu", b =>
                {
                    b.Property<Guid>("MainmenuId")
                        .HasColumnName("MAINMENU_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Activeflag")
                        .HasColumnType("bit");

                    b.Property<string>("MenuNameEn")
                        .HasColumnName("MenuName_en")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("MenuNameTh")
                        .HasColumnName("MenuName_th")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("MenuNo")
                        .HasColumnType("int");

                    b.Property<string>("MenuShortNameTh")
                        .HasColumnName("MenuShortName_th")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("OfficeId")
                        .HasColumnName("OfficeID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PageAddress")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("MainmenuId");

                    b.ToTable("TBL_MAINMENU");
                });

            modelBuilder.Entity("dded.db.Linkage.TblMapPermission", b =>
                {
                    b.Property<Guid>("PermissionId")
                        .HasColumnName("PERMISSION_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("ActiveFlag")
                        .HasColumnName("ACTIVE_FLAG")
                        .HasColumnType("bit");

                    b.Property<Guid?>("MapMenuId")
                        .HasColumnName("MAP_MENU_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OfficerId")
                        .HasColumnName("OFFICER_ID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PermissionId");

                    b.ToTable("TBL_MAP_PERMISSION");
                });

            modelBuilder.Entity("dded.db.Linkage.TblMapcolumn", b =>
                {
                    b.Property<Guid>("MapcolumnId")
                        .HasColumnName("MAPCOLUMN_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("ActiveFlag")
                        .HasColumnType("bit");

                    b.Property<string>("ColumnDateFormat")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ColumnDateTimeFormat")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ColumnDesc")
                        .HasColumnName("ColumnDESC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColumnFileFormat")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("ColumnLevel")
                        .HasColumnType("int");

                    b.Property<string>("ColumnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColumnTimeFormat")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("ColumnTimestamp")
                        .HasColumnType("bit");

                    b.Property<string>("ExternalLink")
                        .HasColumnName("externalLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsCitizenId")
                        .HasColumnName("isCitizenID")
                        .HasColumnType("bit");

                    b.Property<bool?>("MoneyFormat")
                        .HasColumnName("moneyFormat")
                        .HasColumnType("bit");

                    b.Property<int?>("No")
                        .HasColumnType("int");

                    b.Property<short?>("StartColor")
                        .HasColumnName("startColor")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("SubMenuId")
                        .HasColumnName("SubMenu_ID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MapcolumnId");

                    b.ToTable("TBL_MAPCOLUMN");
                });

            modelBuilder.Entity("dded.db.Linkage.TblMapmenu", b =>
                {
                    b.Property<Guid>("MapmenuId")
                        .HasColumnName("MAPMENU_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("ActiveFlag")
                        .HasColumnType("bit");

                    b.Property<Guid>("MainMenuId")
                        .HasColumnName("MainMenuID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("No")
                        .HasColumnType("int");

                    b.Property<Guid>("SubMenuId")
                        .HasColumnName("SubMenuID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MapmenuId");

                    b.ToTable("TBL_MAPMENU");
                });

            modelBuilder.Entity("dded.db.Linkage.TblOfficer", b =>
                {
                    b.Property<Guid>("OfficerId")
                        .HasColumnName("OFFICER_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("ActiveFlag")
                        .HasColumnName("ACTIVE_FLAG")
                        .HasColumnType("bit");

                    b.Property<string>("CardId")
                        .HasColumnName("CARD_ID")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CitizenId")
                        .HasColumnName("CITIZEN_ID")
                        .HasColumnType("nvarchar(13)")
                        .HasMaxLength(13);

                    b.Property<DateTime?>("Createdate")
                        .HasColumnName("CREATEDATE")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnName("DEPARTMENT_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("LevelId")
                        .HasColumnName("LEVEL_ID")
                        .HasColumnType("int");

                    b.Property<string>("PinCode")
                        .HasColumnName("PIN_CODE")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("Username")
                        .HasColumnName("USERNAME")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OfficerId");

                    b.ToTable("TBL_OFFICER");
                });

            modelBuilder.Entity("dded.db.Linkage.TblSubmenu", b =>
                {
                    b.Property<Guid>("SubmenuId")
                        .HasColumnName("SUBMENU_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Activeflag")
                        .HasColumnType("bit");

                    b.Property<string>("MenuNameEn")
                        .HasColumnName("MenuName_en")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("MenuNameTh")
                        .HasColumnName("MenuName_th")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("MenuNo")
                        .HasColumnType("int");

                    b.Property<string>("OfficeId")
                        .HasColumnName("OfficeID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ServiceAddress")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<short?>("ServiceFormatType")
                        .HasColumnType("smallint");

                    b.Property<string>("ServiceId")
                        .HasColumnName("ServiceID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("ServiceQty")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("SubmenuId");

                    b.ToTable("TBL_SUBMENU");
                });
#pragma warning restore 612, 618
        }
    }
}
